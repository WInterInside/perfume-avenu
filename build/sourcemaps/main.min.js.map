{"version":3,"sources":["01_main.js"],"names":[],"mappings":"AAAA","file":"../js/main.min.js","sourcesContent":["// const body = document.body;\r\n// const navToggle = document.querySelector('[data-element~=\"navToggle\"]');\r\n// const navMore = document.querySelector('.header__nav-more');\r\n// const orderBtn = document.querySelector('[data-element=\"orderBtn\"]');\r\n// const modal = document.querySelector('[data-element=\"orderForm\"]');\r\n// const closeBtn = document.querySelector('[data-element=\"popupClose\"]');\r\n// const overlay = modal.querySelector('.popup__overlay');\r\n// const swipeBtn = document.querySelector('[data-element=\"popupSwipe\"]');\r\n\r\n// const toggleNav = () => {\r\n// \tif (!body.classList.contains('is-nav-open')) {\r\n// \t\tbody.classList.add('is-nav-open');\r\n// \t} else {\r\n// \t\tbody.classList.remove('is-nav-open');\r\n// \t}\r\n// };\r\n\r\n// const handleScroll = () => {\r\n// \t(window.scrollY > 0) ?  body.classList.add('is-scrolled') : body.classList.remove('is-scrolled');\r\n// }\r\n\r\n// const closeModal = () => {\r\n// \tmodal.classList.remove('is-open');\r\n// \tbody.classList.remove('is-popup-open');\r\n// }\r\n\r\n// const openModal = () => {\r\n// \tmodal.classList.add('is-open');\r\n// \tbody.classList.add('is-popup-open');\r\n// }\r\n\r\n// navToggle.addEventListener('click', toggleNav);\r\n// navMore.addEventListener('click', toggleNav);\r\n// window.addEventListener(\"scroll\", handleScroll);\r\n\r\n// // Add event listener to document to close nav when clicking outside\r\n// document.addEventListener('click', (e) => {\r\n// \tif (!navToggle.contains(e.target) && !navMore.contains(e.target) && !e.target.closest('.header__nav-more')) {\r\n// \t\tbody.classList.remove('is-nav-open');\r\n// \t}\r\n// });\r\n\r\n// // прокрутка статьи\r\n// document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\r\n// \tanchor.addEventListener('click', function(e) {\r\n// \t\te.preventDefault();\r\n// \t\tlet destination = document.querySelector(this.getAttribute('href'));\r\n// \t\tconst header = document.querySelector('[data-element=\"header\"]');\r\n// \t\tif (destination) {\r\n// \t\t\tlet headerHeight = (header.offsetHeight + 30);\r\n// \t\t\tlet topOfDestination = destination.getBoundingClientRect().top + window.scrollY - headerHeight;\r\n// \t\t\twindow.scrollTo({ top: topOfDestination, behavior: \"smooth\" });\r\n// \t\t}\r\n// \t});\r\n// });\r\n\r\n// if (orderBtn) {\r\n// \torderBtn.addEventListener('click', () => {\r\n// \t\topenModal();\r\n// \t});\r\n\r\n// \tcloseBtn.addEventListener('click', () => {\r\n// \t\tcloseModal();\r\n// \t});\r\n\r\n// \t// Закрыть модальное окно при нажатии клавиши Escape\r\n// \tdocument.addEventListener('keydown', (e) => {\r\n// \t\tif (e.key === 'Escape' && modal.classList.contains('is-open')) {\r\n// \t\t\tcloseModal();\r\n// \t\t}\r\n// \t});\r\n\r\n// \t// Закрыть модальное окно при клике на overlay\r\n// \toverlay.addEventListener('click', () => {\r\n// \t\tcloseModal();\r\n// \t});\r\n// \t// Обработка свайпа по кнопке\r\n// \tlet touchstartY = 0;\r\n// \tlet touchendY = 0;\r\n\r\n// \tswipeBtn.addEventListener('touchstart', e => {\r\n// \t\ttouchstartY = e.changedTouches[0].screenX;\r\n// \t});\r\n\r\n// \tswipeBtn.addEventListener('touchend', e => {\r\n// \t\ttouchendY = e.changedTouches[0].screenX;\r\n// \t\thandleSwipe();\r\n// \t});\r\n\r\n// \t// Функция для обработки свайпа\r\n// \tfunction handleSwipe() {\r\n// \t\tif (touchendY < touchstartY) {\r\n// \t\t\tcloseModal();\r\n// \t\t}\r\n// \t}\r\n// }\r\n\r\n// class Tabs {\r\n// \tsetTabs = (tabs, id) => {\r\n// \t\tthis.clearTabs(tabs);\r\n\r\n// \t\ttabs.querySelectorAll('[data-tab=\"' + id + '\"]').forEach((el) => {\r\n// \t\t\tel.classList.add('is-active');\r\n// \t\t});\r\n// \t}\r\n\r\n// \tclearTabs = (tabs) =>{\r\n// \t\tlet tabsBtn = tabs.querySelectorAll('[data-elements ~= \"tabsBtn\"]'),\r\n// \t\t\ttabsItems = tabs.querySelectorAll('[data-elements ~= \"tabsItem\"]');\r\n\r\n// \t\ttabsBtn.forEach((el) => {\r\n// \t\t\tel.classList.remove('is-active')\r\n// \t\t});\r\n\r\n// \t\ttabsItems.forEach((el) => {\r\n// \t\t\tel.classList.remove('is-active')\r\n// \t\t});\r\n// \t}\r\n// }\r\n\r\n// document.addEventListener('click', (e) => {\r\n// \tlet el = e.target.closest('[data-elements~=\"tabsBtn\"]');\r\n// \tif (el) {\r\n// \t\tlet id = el.dataset.tab;\r\n// \t\tlet tabs = el.closest('[data-elements~=\"tabs\"]');\r\n// \t\tlet tabContents = tabs.querySelectorAll('[data-tab]');\r\n\r\n// \t\ttabContents.forEach((item) => {\r\n// \t\t\titem.classList.toggle('is-active', id === item.dataset.tab);\r\n// \t\t});\r\n\r\n// \t\t// Example method to set the active tabs\r\n// \t\t// function setTabs(tabsContainer, activeTabId) {\r\n// \t\t// \tconsole.log(`Setting tabs for ${activeTabId} in ${tabsContainer}`);\r\n// \t\t// }\r\n// \t\t// setTabs(tabs, id);\r\n// \t}\r\n// });\r\n\r\n\r\n// [].forEach.call( document.querySelectorAll('.form__input--tel'), function(input) {\r\n// \tvar keyCode;\r\n// \tfunction mask(event) {\r\n// \t\tevent.keyCode && (keyCode = event.keyCode);\r\n// \t\tvar pos = this.selectionStart;\r\n// \t\tif (pos < 3) event.preventDefault();\r\n// \t\tvar matrix = \"+7 (___) ___ __ __\",\r\n// \t\t\ti = 0,\r\n// \t\t\tdef = matrix.replace(/\\D/g, \"\"),\r\n// \t\t\tval = this.value.replace(/\\D/g, \"\"),\r\n// \t\t\tnew_value = matrix.replace(/[_\\d]/g, function(a) {\r\n// \t\t\t\treturn i < val.length ? val.charAt(i++) || def.charAt(i) : a\r\n// \t\t\t});\r\n// \t\ti = new_value.indexOf(\"_\");\r\n// \t\tif (i != -1) {\r\n// \t\t\ti < 5 && (i = 3);\r\n// \t\t\tnew_value = new_value.slice(0, i)\r\n// \t\t}\r\n// \t\tvar reg = matrix.substr(0, this.value.length).replace(/_+/g,\r\n// \t\t\tfunction(a) {\r\n// \t\t\t\treturn \"\\\\d{1,\" + a.length + \"}\"\r\n// \t\t\t}).replace(/[+()]/g, \"\\\\$&\");\r\n// \t\treg = new RegExp(\"^\" + reg + \"$\");\r\n// \t\tif (!reg.test(this.value) || this.value.length < 5 || keyCode > 47 && keyCode < 58) this.value = new_value;\r\n// \t\tif (event.type == \"blur\" && this.value.length < 5) this.value = \"\"\r\n// \t}\r\n// \tinput.addEventListener(\"input\", mask, false);\r\n// \tinput.addEventListener(\"focus\", mask, false);\r\n// \tinput.addEventListener(\"blur\", mask, false);\r\n// \tinput.addEventListener(\"keydown\", mask, false)\r\n// });"]}